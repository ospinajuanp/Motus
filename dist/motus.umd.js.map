{"version":3,"file":"motus.umd.js","sources":["../src/gestures/longPress.js","../src/gestures/gestures.js","../src/gestures/tap.js","../src/gestures/swipe.js"],"sourcesContent":["// src/gestures/longPress.js\n\nfunction detectLongPress(element, callback) {\n    let timer = null;\n    let startTime = 0;\n    const thresholdTime = 500; // Tiempo mínimo (ms) para considerar un long press\n    let moved = false;\n  \n    const startTimer = (event) => {\n      moved = false;\n      startTime = Date.now();\n      timer = setTimeout(() => {\n        const duration = Date.now() - startTime;\n        callback({\n          type: 'longpress',\n          duration: duration\n        });\n      }, thresholdTime);\n    };\n  \n    const cancelTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n    };\n  \n    element.addEventListener('touchstart', (event) => {\n      startTimer(event);\n    }, false);\n  \n    element.addEventListener('touchmove', (event) => {\n      moved = true;\n      cancelTimer();\n    }, false);\n  \n    element.addEventListener('touchend', (event) => {\n      if (moved) {\n        cancelTimer();\n      }\n      cancelTimer();\n    }, false);\n  \n    element.addEventListener('touchcancel', (event) => {\n      cancelTimer();\n    }, false);\n  }\n  \n  export default detectLongPress;\n  ","// src/gestures/gestures.js\n\nimport detectTap from './tap';\nimport detectSwipe from './swipe';\nimport detectLongPress from './longPress';\n\nclass GestureManager {\n    /**\n     * @param {HTMLElement} element - Elemento DOM donde se detectarán los gestos.\n     * @param {Object} options - Objeto de configuración con callbacks opcionales.\n     */\n    constructor(element, options = {}) {\n        this.element = element || document;\n        // Asigna callbacks por defecto que simplemente imprimen el objeto del gesto\n        this.options = {\n        onTap: options.onTap || ((event) => { console.log(event); }),\n        onSwipe: options.onSwipe || ((event) => { console.log(event); }),\n        onLongPress: options.onLongPress || ((event) => { console.log(event); })\n        };\n        this.init();\n    }\n\n    init() {\n        // Se inicializan cada uno de los detectores de gestos usando la función correspondiente\n        detectTap(this.element, this.options.onTap);\n        detectSwipe(this.element, this.options.onSwipe);\n        detectLongPress(this.element, this.options.onLongPress);\n    }\n}\n\nexport default GestureManager;\n","// src/gestures/tap.js\n\nfunction detectTap(element, callback) {\n    let touchStartTime = 0;\n    let touchStartX = 0;\n    let touchStartY = 0;\n    const thresholdTime = 300; // Tiempo máximo (ms) para considerar un tap\n    const thresholdDistance = 10; // Distancia máxima (px) permitida\n  \n    element.addEventListener('touchstart', (event) => {\n      const touch = event.changedTouches[0];\n      touchStartTime = Date.now();\n      touchStartX = touch.pageX;\n      touchStartY = touch.pageY;\n    }, false);\n  \n    element.addEventListener('touchend', (event) => {\n      const touch = event.changedTouches[0];\n      const timeDiff = Date.now() - touchStartTime;\n      const deltaX = Math.abs(touch.pageX - touchStartX);\n      const deltaY = Math.abs(touch.pageY - touchStartY);\n  \n      if (timeDiff < thresholdTime && deltaX < thresholdDistance && deltaY < thresholdDistance) {\n        // Devuelve las coordenadas del toque\n        callback({\n          type: 'tap',\n          x: touch.pageX,\n          y: touch.pageY\n        });\n      }\n    }, false);\n  }\n  \n  export default detectTap;\n  ","// src/gestures/swipe.js\n\nfunction detectSwipe(element, callback) {\n    let touchStartX = 0;\n    let touchStartY = 0;\n    const thresholdDistance = 30; // Distancia mínima para considerar un swipe\n  \n    element.addEventListener('touchstart', (event) => {\n      const touch = event.changedTouches[0];\n      touchStartX = touch.pageX;\n      touchStartY = touch.pageY;\n    }, false);\n  \n    element.addEventListener('touchend', (event) => {\n      const touch = event.changedTouches[0];\n      const touchEndX = touch.pageX;\n      const touchEndY = touch.pageY;\n  \n      const deltaX = touchEndX - touchStartX;\n      const deltaY = touchEndY - touchStartY;\n      let direction = null;\n      // Calcula la distancia total\n      const distance = Math.sqrt(deltaX ** 2 + deltaY ** 2);\n  \n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        if (Math.abs(deltaX) > thresholdDistance) {\n          direction = deltaX > 0 ? 'right' : 'left';\n        }\n      } else {\n        if (Math.abs(deltaY) > thresholdDistance) {\n          direction = deltaY > 0 ? 'down' : 'up';\n        }\n      }\n  \n      if (direction) {\n        callback({\n          type: 'swipe',\n          direction: direction,\n          distance: distance\n        });\n      }\n    }, false);\n  }\n  \n  export default detectSwipe;\n  "],"names":["detectLongPress","element","callback","timer","startTime","moved","cancelTimer","clearTimeout","addEventListener","event","Date","now","setTimeout","duration","type","GestureManager","options","arguments","length","undefined","_classCallCheck","this","document","onTap","console","log","onSwipe","onLongPress","init","key","value","touchStartTime","touchStartX","touchStartY","touch","changedTouches","pageX","pageY","timeDiff","deltaX","Math","abs","deltaY","x","y","touchEndX","touchEndY","direction","distance","sqrt","pow","detectSwipe"],"mappings":"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"}